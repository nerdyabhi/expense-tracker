import { z } from 'zod';

export const transactionSchema = z.object({
  id: z.string().optional(), // Optional: will be generated by the database
  description: z.string().min(2, { message: 'Description must be at least 2 characters.' }),
  category: z.string().min(1, { message: 'Category is required' }),
  amount: z.coerce.number().positive({ message: 'Amount must be a positive number.' }),
  date: z.string().min(1, { message: 'Date is required' }),
  type: z.enum(['income', 'expense'], { 
    required_error: 'Transaction type is required',
    invalid_type_error: 'Transaction type must be either income or expense',
  }),
});

export const budgetSchema = z.object({
  id: z.string().optional(), // Optional: will be generated by the database
  category: z.string().min(1, { message: 'Category is required' }),
  budget: z.coerce.number().positive({ message: 'Budget amount must be a positive number.' }),
  spent: z.coerce.number().default(0),
});

export type Transaction = z.infer<typeof transactionSchema>;
export type Budget = z.infer<typeof budgetSchema>;
